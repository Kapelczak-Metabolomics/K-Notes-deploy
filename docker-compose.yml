version: '3.8'

services:
  app:
    build: .
    restart: always
    ports:
      - "${PORT:-5000}:5000"
    depends_on:
      - postgres
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_URL=postgresql://${POSTGRES_USER:-kapelczak_user}:${POSTGRES_PASSWORD:-your_secure_password}@postgres:5432/${POSTGRES_DB:-kapelczak_notes}
      - SMTP_HOST=${SMTP_HOST:-}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-1073741824}
      - SESSION_SECRET=${SESSION_SECRET:-kapelczak_secret_key_change_in_production}
    volumes:
      - app-uploads:/app/uploads
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-kapelczak_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-your_secure_password}
      - POSTGRES_DB=${POSTGRES_DB:-kapelczak_notes}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-kapelczak_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  app-uploads: