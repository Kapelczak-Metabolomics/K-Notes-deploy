name: kapelczak-notes
description: "Kapelczak Notes - Laboratory Documentation Platform"

services:
  app:
    build:
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MAX_FILE_SIZE=1073741824
      - SESSION_SECRET={{ .Env.SESSION_SECRET }}
      - DATABASE_URL={{ .Env.DATABASE_URL }}
      - SMTP_HOST={{ .Env.SMTP_HOST }}
      - SMTP_PORT={{ .Env.SMTP_PORT }}
      - SMTP_USER={{ .Env.SMTP_USER }}
      - SMTP_PASSWORD={{ .Env.SMTP_PASSWORD }}
    ports:
      - "5000:5000"
    volumes:
      - uploads:/app/uploads
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: always

  postgres:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER={{ .Env.POSTGRES_USER }}
      - POSTGRES_PASSWORD={{ .Env.POSTGRES_PASSWORD }}
      - POSTGRES_DB={{ .Env.POSTGRES_DB }}
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  uploads:

setup:
  - name: "Initialize Database"
    run: "bash init-db.sh"
    service: app
    oneTime: true
  
  - name: "Create Admin User"
    run: "node server/scripts/create-admin.js"
    service: app
    oneTime: true

resources:
  cpu: 1
  memory: 2Gi
  storage:
    postgres_data: 5Gi
    uploads: 10Gi